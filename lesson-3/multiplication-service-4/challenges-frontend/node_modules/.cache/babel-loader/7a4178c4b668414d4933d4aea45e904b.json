{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/src/components/ChallengeComponent.js\";\nimport * as React from \"react\";\nimport ChallengesApiClient from \"../services/ChallengesApiClient\";\nimport LastAttemptsComponent from './LastAttemptsComponent';\nimport LeaderBoardComponent from './LeaderBoardComponent';\n\nclass ChallengeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      a: '',\n      b: '',\n      user: '',\n      message: '',\n      guess: 0,\n      lastAttempts: []\n    };\n    this.handleSubmitResult = this.handleSubmitResult.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshChallenge();\n  }\n\n  refreshChallenge() {\n    ChallengesApiClient.challenge().then(res => {\n      if (res.ok) {\n        res.json().then(json => {\n          this.setState({\n            a: json.factorA,\n            b: json.factorB\n          });\n        });\n      } else {\n        this.updateMessage(\"Can't reach the server\");\n      }\n    });\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  handleSubmitResult(event) {\n    event.preventDefault();\n    ChallengesApiClient.sendGuess(this.state.user, this.state.a, this.state.b, this.state.guess).then(res => {\n      if (res.ok) {\n        res.json().then(json => {\n          if (json.correct) {\n            this.updateMessage(\"Congratulations! Your guess is correct\");\n          } else {\n            this.updateMessage(\"Oops! Your guess \" + json.resultAttempt + \" is wrong, but keep playing!\");\n          }\n\n          this.updateLastAttempts(this.state.user);\n          this.refreshChallenge();\n        });\n      } else {\n        this.updateMessage(\"Error: server error or not available\");\n      }\n    });\n  }\n\n  updateMessage(m) {\n    this.setState({\n      message: m\n    });\n  }\n\n  updateLastAttempts(userAlias) {\n    ChallengesApiClient.getAttempts(userAlias).then(res => {\n      if (res.ok) {\n        let attempts = [];\n        res.json().then(data => {\n          data.forEach(item => {\n            attempts.push(item);\n          });\n          this.setState({\n            lastAttempts: attempts\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Your new challenge is\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"challenge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, this.state.a, \" x \", this.state.b)), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmitResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Your alias:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      maxLength: \"12\",\n      name: \"user\",\n      value: this.state.user,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Your guess:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      name: \"guess\",\n      value: this.state.guess,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.state.message), this.state.lastAttempts.length > 0 && /*#__PURE__*/React.createElement(LastAttemptsComponent, {\n      lastAttempts: this.state.lastAttempts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LeaderBoardComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ChallengeComponent;","map":{"version":3,"sources":["/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/src/components/ChallengeComponent.js"],"names":["React","ChallengesApiClient","LastAttemptsComponent","LeaderBoardComponent","ChallengeComponent","Component","constructor","props","state","a","b","user","message","guess","lastAttempts","handleSubmitResult","bind","handleChange","componentDidMount","refreshChallenge","challenge","then","res","ok","json","setState","factorA","factorB","updateMessage","event","name","target","value","preventDefault","sendGuess","correct","resultAttempt","updateLastAttempts","m","userAlias","getAttempts","attempts","data","forEach","item","push","render","length"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ChallengesApiClient from \"../services/ChallengesApiClient\";\nimport LastAttemptsComponent from './LastAttemptsComponent';\nimport LeaderBoardComponent from './LeaderBoardComponent';\n\nclass ChallengeComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            a: '', b: '',\n            user: '',\n            message: '',\n            guess: 0,\n            lastAttempts: []\n        };\n        this.handleSubmitResult = this.handleSubmitResult.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.refreshChallenge();\n    }\n\n    refreshChallenge() {\n        ChallengesApiClient.challenge().then(\n            res => {\n                if (res.ok) {\n                    res.json().then(json => {\n                        this.setState({\n                            a: json.factorA,\n                            b: json.factorB\n                        });\n                    });\n                } else {\n                    this.updateMessage(\"Can't reach the server\");\n                }\n            }\n        );\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        this.setState({\n            [name]: event.target.value\n        });\n    }\n\n    handleSubmitResult(event) {\n        event.preventDefault();\n        ChallengesApiClient.sendGuess(this.state.user,\n            this.state.a, this.state.b,\n            this.state.guess)\n            .then(res => {\n                if (res.ok) {\n                    res.json().then(json => {\n                        if (json.correct) {\n                            this.updateMessage(\"Congratulations! Your guess is correct\");\n                        } else {\n                            this.updateMessage(\"Oops! Your guess \" + json.resultAttempt +\n                                \" is wrong, but keep playing!\");\n                        }\n                        this.updateLastAttempts(this.state.user);\n                        this.refreshChallenge();\n                    });\n                } else {\n                    this.updateMessage(\"Error: server error or not available\");\n                }\n            });\n    }\n\n    updateMessage(m: string) {\n        this.setState({\n            message: m\n        });\n    }\n\n    updateLastAttempts(userAlias: string) {\n        ChallengesApiClient.getAttempts(userAlias).then(res => {\n            if (res.ok) {\n                let attempts: Attempt[] = [];\n                res.json().then(data => {\n                    data.forEach(item => {\n                        attempts.push(item);\n                    });\n                    this.setState({\n                        lastAttempts: attempts\n                    });\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"display-column\">\n                <div>\n                    <h3>Your new challenge is</h3>\n                    <div className=\"challenge\">\n                        {this.state.a} x {this.state.b}\n                    </div>\n                </div>\n                <form onSubmit={this.handleSubmitResult}>\n                    <label>\n                        Your alias:\n                        <input type=\"text\" maxLength=\"12\"\n                               name=\"user\"\n                               value={this.state.user}\n                               onChange={this.handleChange}/>\n                    </label>\n                    <br/>\n                    <label>\n                        Your guess:\n                        <input type=\"number\" min=\"0\"\n                               name=\"guess\"\n                               value={this.state.guess}\n                               onChange={this.handleChange}/>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </form>\n                <h4>{this.state.message}</h4>\n                {this.state.lastAttempts.length > 0 &&\n                    <LastAttemptsComponent lastAttempts={this.state.lastAttempts}/>\n                }\n                <LeaderBoardComponent/>\n            </div>\n        );\n    }\n}\n\nexport default ChallengeComponent;\n"]},"metadata":{},"sourceType":"module"}
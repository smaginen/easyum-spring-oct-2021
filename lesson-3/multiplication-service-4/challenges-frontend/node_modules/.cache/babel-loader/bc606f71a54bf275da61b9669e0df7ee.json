{"ast":null,"code":"import axios from 'axios';\n\nclass ChallengesApiClient {\n  static challenge() {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_CHALLENGE);\n  }\n\n  static sendGuess(user, a, b, guess) {\n    return axios.post(ChallengesApiClient.SERVER_URL + ChallengesApiClient.POST_RESULT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'origin': 'localhost:3000'\n      },\n      body: JSON.stringify({\n        userAlias: user,\n        factorA: a,\n        factorB: b,\n        guess: guess\n      })\n    });\n  }\n\n  static getAttempts(userAlias) {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n  }\n\n  static getUsers(userIds) {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_USERS_BY_IDS + '/' + userIds.join(','));\n  }\n\n}\n\nChallengesApiClient.SERVER_URL = 'http://localhost:8080';\nChallengesApiClient.GET_CHALLENGE = '/challenges/random';\nChallengesApiClient.POST_RESULT = '/attempts';\nChallengesApiClient.GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\nChallengesApiClient.GET_USERS_BY_IDS = '/users';\nexport default ChallengesApiClient;","map":{"version":3,"sources":["/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/src/services/ChallengesApiClient.js"],"names":["axios","ChallengesApiClient","challenge","fetch","SERVER_URL","GET_CHALLENGE","sendGuess","user","a","b","guess","post","POST_RESULT","method","headers","body","JSON","stringify","userAlias","factorA","factorB","getAttempts","GET_ATTEMPTS_BY_ALIAS","getUsers","userIds","GET_USERS_BY_IDS","join"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,mBAAN,CAA0B;AAQtB,SAAOC,SAAP,GAAsC;AAClC,WAAOC,KAAK,CAACF,mBAAmB,CAACG,UAApB,GACTH,mBAAmB,CAACI,aADZ,CAAZ;AAEH;;AAED,SAAOC,SAAP,CAAiBC,IAAjB,EACiBC,CADjB,EAEiBC,CAFjB,EAGiBC,KAHjB,EAGmD;AAC/C,WAAOV,KAAK,CAACW,IAAN,CAAWV,mBAAmB,CAACG,UAApB,GACdH,mBAAmB,CAACW,WADjB,EAEH;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFb;AAMIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACIC,QAAAA,SAAS,EAAEX,IADf;AAEIY,QAAAA,OAAO,EAAEX,CAFb;AAGIY,QAAAA,OAAO,EAAEX,CAHb;AAIIC,QAAAA,KAAK,EAAEA;AAJX,OADE;AANV,KAFG,CAAP;AAiBH;;AAED,SAAOW,WAAP,CAAmBH,SAAnB,EAAyD;AACrD,WAAOf,KAAK,CAACF,mBAAmB,CAACG,UAApB,GACTH,mBAAmB,CAACqB,qBADX,GACmCJ,SADpC,CAAZ;AAEH;;AAED,SAAOK,QAAP,CAAgBC,OAAhB,EAAsD;AAClD,WAAOrB,KAAK,CAACF,mBAAmB,CAACG,UAApB,GACTH,mBAAmB,CAACwB,gBADX,GAET,GAFS,GAEHD,OAAO,CAACE,IAAR,CAAa,GAAb,CAFE,CAAZ;AAGH;;AA7CqB;;AAApBzB,mB,CAEKG,U,GAAa,uB;AAFlBH,mB,CAGKI,a,GAAgB,oB;AAHrBJ,mB,CAIKW,W,GAAc,W;AAJnBX,mB,CAKKqB,qB,GAAwB,kB;AAL7BrB,mB,CAMKwB,gB,GAAmB,Q;AA0C9B,eAAexB,mBAAf","sourcesContent":["import axios from 'axios';\nclass ChallengesApiClient {\n\n    static SERVER_URL = 'http://localhost:8080';\n    static GET_CHALLENGE = '/challenges/random';\n    static POST_RESULT = '/attempts';\n    static GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\n    static GET_USERS_BY_IDS = '/users';\n\n    static challenge(): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_CHALLENGE);\n    }\n\n    static sendGuess(user: string,\n                     a: number,\n                     b: number,\n                     guess: number): Promise<Response> {\n        return axios.post(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.POST_RESULT,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'origin': 'localhost:3000'\n                },\n                body: JSON.stringify(\n                    {\n                        userAlias: user,\n                        factorA: a,\n                        factorB: b,\n                        guess: guess\n                    }\n                )\n            });\n    }\n\n    static getAttempts(userAlias: string): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n    }\n\n    static getUsers(userIds: number[]): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_USERS_BY_IDS +\n            '/' + userIds.join(','));\n    }\n}\n\nexport default ChallengesApiClient;\n"]},"metadata":{},"sourceType":"module"}
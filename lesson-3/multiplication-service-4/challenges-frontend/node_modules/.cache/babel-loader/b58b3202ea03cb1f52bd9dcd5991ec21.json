{"ast":null,"code":"import _classCallCheck from\"/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var ChallengesApiClient=/*#__PURE__*/function(){function ChallengesApiClient(){_classCallCheck(this,ChallengesApiClient);}_createClass(ChallengesApiClient,null,[{key:\"challenge\",value:function challenge(){return fetch(ChallengesApiClient.SERVER_URL+ChallengesApiClient.GET_CHALLENGE);}},{key:\"sendGuess\",value:function sendGuess(user,a,b,guess){var headers=new Headers({'Authorization':'0ZHJadMU0KI6'});var options={headers:headers,credentials:\"include\"// Вот, что нужно задать\n};var config={headers:{\"Content-Type\":\"application/json\",'Access-Control-Allow-Origin':'*'}};return axios.post(ChallengesApiClient.SERVER_URL+ChallengesApiClient.POST_RESULT,{userAlias:user,factorA:a,factorB:b,guess:guess},config).then(function(response){return response.json();}).catch(function(r){return{};});}},{key:\"getAttempts\",value:function getAttempts(userAlias){return fetch(ChallengesApiClient.SERVER_URL+ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS+userAlias);}},{key:\"getUsers\",value:function getUsers(userIds){return fetch(ChallengesApiClient.SERVER_URL+ChallengesApiClient.GET_USERS_BY_IDS+'/'+userIds.join(','));}}]);return ChallengesApiClient;}();ChallengesApiClient.SERVER_URL='http://localhost:8080';ChallengesApiClient.GET_CHALLENGE='/challenges/random';ChallengesApiClient.POST_RESULT='/attempts';ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS='/attempts?alias=';ChallengesApiClient.GET_USERS_BY_IDS='/users';export default ChallengesApiClient;","map":{"version":3,"sources":["/Users/evgenijsmagin/IdeaProjects/easyum-spring-oct-2021/lesson-3/multiplication-service-4/challenges-frontend/src/services/ChallengesApiClient.js"],"names":["axios","ChallengesApiClient","fetch","SERVER_URL","GET_CHALLENGE","user","a","b","guess","headers","Headers","options","credentials","config","post","POST_RESULT","userAlias","factorA","factorB","then","response","json","catch","r","GET_ATTEMPTS_BY_ALIAS","userIds","GET_USERS_BY_IDS","join"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GACMC,CAAAA,mB,qLAQoC,CAClC,MAAOC,CAAAA,KAAK,CAACD,mBAAmB,CAACE,UAApB,CACTF,mBAAmB,CAACG,aADZ,CAAZ,CAEH,C,4CAEgBC,I,CACAC,C,CACAC,C,CACAC,K,CAAkC,CAC/C,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,CACxB,gBAAiB,cADO,CAAZ,CAAhB,CAGA,GAAMC,CAAAA,OAAO,CAAG,CACZF,OAAO,CAAPA,OADY,CAEZG,WAAW,CAAC,SAAU;AAFV,CAAhB,CAIA,GAAIC,CAAAA,MAAM,CAAG,CACTJ,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,8BAA+B,GAF1B,CADA,CAAb,CAMA,MAAOT,CAAAA,KAAK,CAACc,IAAN,CAAWb,mBAAmB,CAACE,UAApB,CACdF,mBAAmB,CAACc,WADjB,CAEH,CACAC,SAAS,CAAEX,IADX,CAEIY,OAAO,CAAEX,CAFb,CAGAY,OAAO,CAAEX,CAHT,CAIAC,KAAK,CAAEA,KAJP,CAFG,CAOAK,MAPA,EAQGM,IARH,CAQQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EARhB,EAQqCC,KARrC,CAQ2C,SAAAC,CAAC,CAAI,CAAC,MAAO,EAAP,CAAU,CAR3D,CAAP,CASH,C,gDAEkBP,S,CAAsC,CACrD,MAAOd,CAAAA,KAAK,CAACD,mBAAmB,CAACE,UAApB,CACTF,mBAAmB,CAACuB,qBADX,CACmCR,SADpC,CAAZ,CAEH,C,0CAEeS,O,CAAsC,CAClD,MAAOvB,CAAAA,KAAK,CAACD,mBAAmB,CAACE,UAApB,CACTF,mBAAmB,CAACyB,gBADX,CAET,GAFS,CAEHD,OAAO,CAACE,IAAR,CAAa,GAAb,CAFE,CAAZ,CAGH,C,mCAlDC1B,mB,CAEKE,U,CAAa,uB,CAFlBF,mB,CAGKG,a,CAAgB,oB,CAHrBH,mB,CAIKc,W,CAAc,W,CAJnBd,mB,CAKKuB,qB,CAAwB,kB,CAL7BvB,mB,CAMKyB,gB,CAAmB,Q,CA+C9B,cAAezB,CAAAA,mBAAf","sourcesContent":["import axios from 'axios';\nclass ChallengesApiClient {\n\n    static SERVER_URL = 'http://localhost:8080';\n    static GET_CHALLENGE = '/challenges/random';\n    static POST_RESULT = '/attempts';\n    static GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\n    static GET_USERS_BY_IDS = '/users';\n\n    static challenge(): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_CHALLENGE);\n    }\n\n    static sendGuess(user: string,\n                     a: number,\n                     b: number,\n                     guess: number): Promise<Response> {\n        const headers = new Headers({\n            'Authorization': '0ZHJadMU0KI6'\n        });\n        const options = {\n            headers,\n            credentials:\"include\" // Вот, что нужно задать\n        };\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            },\n        }\n        return axios.post(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.POST_RESULT,\n            {\n            userAlias: user,\n                factorA: a,\n            factorB: b,\n            guess: guess\n            }, config\n                ).then(response => response.json()).catch(r => {return {}});\n    }\n\n    static getAttempts(userAlias: string): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n    }\n\n    static getUsers(userIds: number[]): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL +\n            ChallengesApiClient.GET_USERS_BY_IDS +\n            '/' + userIds.join(','));\n    }\n}\n\nexport default ChallengesApiClient;\n"]},"metadata":{},"sourceType":"module"}